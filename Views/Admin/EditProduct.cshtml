@model OnlineShoppingSite.ViewModels.ItemViewModel

@{
    var isEdit = ViewContext.RouteData.Values["action"].ToString() == "EditProduct";
    ViewData["Title"] = isEdit ? "Edit Product" : "Create Product";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="@ViewContext.RouteData.Values["action"].ToString()" method="post">
    @Html.AntiForgeryToken()
    @if (isEdit)
    {
        <input type="hidden" asp-for="Item.ItemId" />
    }

    <div class="form-group">
        <label asp-for="Item.Name"></label>
        <input asp-for="Item.Name" class="form-control" />
        <span asp-validation-for="Item.Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Item.Price"></label>
        <input asp-for="Item.Price" class="form-control" />
        <span asp-validation-for="Item.Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Item.Description"></label>
        <textarea asp-for="Item.Description" class="form-control"></textarea>
        <span asp-validation-for="Item.Description" class="text-danger"></span>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Item.CategoryId)
        @Html.DropDownListFor(
            model => model.Item.CategoryId,
            Model.Categories,
            "Select Category",
            new { @class = "form-control" }
        )
    </div>

    <div class="form-group">
        <label asp-for="Item.ImageUrl"></label>
        <input asp-for="Item.ImageUrl" class="form-control" />
        <span asp-validation-for="Item.ImageUrl" class="text-danger"></span>
    </div>

    <!-- Add other fields as necessary, always prefixed with "Item." -->

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="ManageProducts" class="btn btn-secondary">Cancel</a>
</form>